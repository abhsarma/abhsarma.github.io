library(knitr)
library(distill)
opts_chunk$set(fig.align="center")
opts_chunk$set(echo = FALSE)
library(brms)
library(dplyr)
library(purrr)
library(tidyr)
library(ggplot2)
library(tidybayes)
library(modelr)
library(mixturepriors)
theme_set( theme_light() ) +
theme_update(
panel.border = element_blank(),
panel.grid.major.y = element_line(colour = "#666666", size = 0.1),
panel.grid.minor.y = element_line(colour = "#666666", size = 0.1),
panel.grid.major.x = element_line(colour = "#666666", size = 0.1),
panel.grid.minor.x = element_line(colour = "#666666", size = 0.1),
)
theme_update()
CHAINS = 4
CORES = 1 # DO NOT CHANGE
ITER = 2000
df = read.csv('../data/ex1_posture_exp2_data.csv')
library(knitr)
#library(distill)
opts_chunk$set(fig.align="center")
opts_chunk$set(echo = FALSE)
library(brms)
library(dplyr)
library(purrr)
library(tidyr)
library(ggplot2)
library(tidybayes)
library(modelr)
library(mixturepriors)
theme_set( theme_light() ) +
theme_update(
panel.border = element_blank(),
panel.grid.major.y = element_line(colour = "#666666", size = 0.1),
panel.grid.minor.y = element_line(colour = "#666666", size = 0.1),
panel.grid.major.x = element_line(colour = "#666666", size = 0.1),
panel.grid.minor.x = element_line(colour = "#666666", size = 0.1),
)
theme_update()
CHAINS = 4
CORES = 1
ITER = 2000
get_student_t_density <- function(g, x, y, .nu = 3) {
tibble(grid = g, d = gamlss.dist::dTF(g, x, y, nu = .nu) %>% round(3))
}
get_normal_density <- function(g, x, y) {
tibble(grid = g, d = dnorm(g, x, y) %>% round(3))
}
grid.alpha = seq(0, 10, by = 0.05)
grid.beta = seq(-5, 5, by = 0.05)
data.frame( x = seq(-40, 40, length.out = 1e3) ) %>%
mutate(y = gamlss.dist::dTF(x, 0, 10, 3)) %>%
ggplot(aes(x, y)) +
geom_line()
mxr_prior_grid(student_t(3, mu = c(3, 4), sigma = c(0.2, 0.8)),
points.location = 9,
points.scale = 9,
class = "Intercept") %>%
mutate(
d = map2(location, scale, ~ get_student_t_density(grid.alpha, .x, .y) )
) %>%
unnest( d, .drop = FALSE ) %>%
select(-prior) %>%
mutate(log_C = 1, family = "t") %>%
plot_mxr_posterior_parameter_density (
graph = "graph_2",
type = "parameter",
encoding = quos(
stroke = '#8F2727',
fill = 'none',
size = 2,
xlab = "prior probability density for the intercept"
)
mxr_prior_grid(student_t(3, mu = c(-0.5, 0.5), sigma = c(0.2, 0.6)),
points.location = 9,
points.scale = 9,
class = "b") %>%
mutate(
d = map2(location, scale, ~ get_student_t_density(grid.beta, .x, .y) )
) %>%
unnest( d, .drop = FALSE ) %>%
select(-prior) %>%
mutate(log_C = 1, family = "t") %>%
plot_mxr_posterior_parameter_density (
graph = "graph_2",
type = "parameter",
encoding = quos(
stroke = '#8F2727',
fill = 'none',
size = 2,
xlab = "prior probability density for the\nmean difference between the two conditions"
)
data.frame( x = seq(-40, 40, length.out = 1e3) ) %>%
mutate(y = dnorm(x, 0, 10)) %>%
ggplot(aes(x, y)) +
geom_line()
mxr_prior_grid(normal(8, mu = c(3, 4), sigma = c(0.2, 0.8)),
points.location = 9,
points.scale = 4,
class = "Intercept") %>%
mutate(
d = map2(location, scale, ~ get_normal_density(grid.alpha, .x, .y) )
) %>%
unnest( d, .drop = FALSE ) %>%
select(-prior) %>%
mutate(log_C = 1, family = 'N') %>%
plot_mxr_posterior_parameter_density (
graph = "graph_2",
type = "parameter",
encoding = quos(
stroke = '#8F2727',
fill = 'none',
size = 2,
xlab = "prior probability density for the intercept"
)
